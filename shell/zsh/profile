#!/usr/bin/env zsh
# shellcheck disable=SC1071

alias reload="source $HOME/.zshrc"

# Init Shell Completions
autoload -Uz compinit && compinit

# Local bins
if [ -d "$HOME/.local/bin" ]; then
    export PATH="$HOME/.local/bin:$PATH"
fi

# Local bins
if [ -f "$HOME/.local/bin/env" ]; then
    source "$HOME/.local/bin/env"
fi

# Cargo env
if [[ -f "$HOME/.cargo/env" ]]; then
    source "$HOME/.cargo/env"
fi

# Go Path
if [[ -d /usr/local/go/bin/ ]]; then
    export PATH=$PATH:/usr/local/go/bin
fi

# Check for / install utilities
if [[ "$(uname -s)" == "Linux" ]]; then
    "$HOME/.files/shell/scripts/install.py"
fi

# Fnm (Nodejs Version Manager)
if which fnm &>/dev/null; then
    eval "$(fnm completions --shell zsh)"
    eval "$(fnm env --use-on-cd --shell zsh)"
    if [[ $(fnm list | wc -l) == 1 ]]; then
        fnm install 23
    fi
fi

# Homebrew env
if [[ -f /opt/homebrew/bin/brew ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
    export ZPLUG_HOME="/opt/homebrew/opt/zplug"
    if [[ -d /opt/homebrew/opt/tpm/share/tpm && ! -d ~/.tmux/plugins/tpm ]]; then
        mkdir -p ~/.tmux/plugins
        ln -s /opt/homebrew/opt/tpm/share/tpm ~/.tmux/plugins/tpm
    fi
fi

# Just
if which just &>/dev/null; then
    eval "$(just --completions=zsh)"
fi

# Neovim
if [[ -d /usr/local/nvim/bin ]]; then
    export EDITOR=nvim
    export PATH="${PATH:+${PATH}:}/usr/local/nvim/bin"
fi

# Starship
if which starship &>/dev/null; then
    # workaround a starship bug on MacOS https://github.com/starship/starship/issues/3418#issuecomment-2477375663
    if [[ "${widgets[zle - keymap - select]#user:}" == "starship_zle-keymap-select" ||
        "${widgets[zle - keymap - select]#user:}" == "starship_zle-keymap-select-wrapped" ]]; then
        zle -N zle-keymap-select ""
    fi
    eval "$(starship init zsh)"

    if [[ ! -f "$HOME/.config/starship.toml" ]]; then
        ln -s "$HOME/.files/shell/config/starship.toml" "$HOME/.config/starship.toml"
    fi
fi

# Updating Clock
TMOUT=1
TRAPALRM() {
    case "$WIDGET" in
    *fzf* | expand-or-complete | self-insert | up-line-or-beginning-search | down-line-or-beginning-search | backward-delete-char | .history-incremental-search-backward | .history-incremental-search-forward)
        :
        ;;

    *)
        zle reset-prompt
        ;;
    esac
}

# Fzf (note: initialized in zplug, after zsh-vi-mode)
if [[ -f "$HOME/.fzf/bin/fzf" ]]; then
    export PATH="$PATH:/$HOME/.fzf/bin"
fi
export FZF_ALT_C_COMMAND=""
export FZF_CTRL_T_COMMAND=""

# Set up zsh plugins
source ~/.files/shell/zsh/zplug

# aliases and command specific stuff
source "$HOME/.files/shell/aliases"
source "$HOME/.files/shell/zsh/history"
source "$HOME/.files/shell/scripts/download.sh"
source "$HOME/.files/shell/scripts/worktrees.sh"

# zoxide wants to be at the end
if which zoxide &>/dev/null; then
    eval "$(zoxide init zsh)"
fi
