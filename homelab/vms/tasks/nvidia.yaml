# Install NVIDIA Drivers and metrics exporter
- name: Check if nvidia drivers already installed
  command: lsmod | grep nvidia
  register: drivers_installed
  failed_when: false
  changed_when: false

- name: Check if nvidia_gpu_exporter is already installed
  stat:
    path: /usr/local/bin/nvidia_gpu_exporter
  register: exporter_installed
  changed_when: false

- name: Install ubuntu-drivers-common package
  apt:
    name: ubuntu-drivers-common
    state: present
  become: true
  when: not drivers_installed

- name: Install recommended NVIDIA drivers
  command: ubuntu-drivers install
  become: true
  when: not drivers_installed

# curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey     | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
# curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list     | sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g'     | sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list

- name: Add NVIDIA container toolkit GPG key
  apt_key:
    url: https://nvidia.github.io/libnvidia-container/gpgkey
    keyring: /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
  become: true
  when: not drivers_installed

- name: Get NVIDIA repository list
  get_url:
    url: https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list
    dest: /tmp/nvidia-container-toolkit.list
  become: true
  when: not drivers_installed

- name: Convert repository list to use signed-by option
  shell: sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' /tmp/nvidia-container-toolkit.list > /etc/apt/sources.list.d/nvidia-container-toolkit.list
  become: true
  when: not drivers_installed

- name: Update apt cache
  apt:
    update_cache: yes
  become: true
  when: not drivers_installed

- name: Install NVIDIA container toolkit and nvtop
  apt:
    name:
      - nvidia-container-toolkit
      - nvtop
    state: present
  become: true
  when: not drivers_installed

- name: Set default nvidia_gpu_exporter version
  set_fact:
    nvidia_gpu_exporter_version: "1.3.2"
  when: nvidia_gpu_exporter_version is not defined

- name: Create temporary directory for exporter download
  tempfile:
    state: directory
    suffix: nvidia_gpu_exporter
  register: temp_exporter_dir
  when: not exporter_installed.stat.exists

- name: Download nvidia_gpu_exporter
  get_url:
    url: https://github.com/utkuozdemir/nvidia_gpu_exporter/releases/download/v{{ nvidia_gpu_exporter_version }}/nvidia_gpu_exporter_{{ nvidia_gpu_exporter_version }}_linux_x86_64.tar.gz
    dest: "{{ temp_exporter_dir.path }}/nvidia_gpu_exporter.tar.gz"
    mode: "0644"
  become: true
  when: not exporter_installed.stat.exists

- name: Extract nvidia_gpu_exporter archive
  unarchive:
    src: "{{ temp_exporter_dir.path }}/nvidia_gpu_exporter.tar.gz"
    dest: "{{ temp_exporter_dir.path }}"
    remote_src: yes
  become: true
  when: not exporter_installed.stat.exists

- name: Move nvidia_gpu_exporter binary to /usr/local/bin
  copy:
    src: "{{ temp_exporter_dir.path }}/nvidia_gpu_exporter"
    dest: /usr/local/bin/nvidia_gpu_exporter
    mode: "0755"
    remote_src: yes
  become: true
  when: not exporter_installed.stat.exists

- name: Create systemd service file for nvidia_gpu_exporter
  copy:
    dest: /etc/systemd/system/nvidia_gpu_exporter.service
    content: |
      [Unit]
      Description=NVIDIA GPU Exporter
      After=network.target

      [Service]
      ExecStart=/usr/local/bin/nvidia_gpu_exporter
      Restart=always
      RestartSec=10
      User=root

      [Install]
      WantedBy=multi-user.target
    mode: "0644"
  become: true
  when: not exporter_installed.stat.exists

- name: Enable and start nvidia_gpu_exporter service
  systemd:
    name: nvidia_gpu_exporter
    state: started
    enabled: yes
    daemon_reload: yes
  become: true
  when: not exporter_installed.stat.exists

- name: Clean up temporary directory
  file:
    path: "{{ temp_exporter_dir.path }}"
    state: absent
  become: true
  when: not exporter_installed.stat.exists

- name: Check if reboot is required
  stat:
    path: /var/run/reboot-required
  register: reboot_required_file
  when: not drivers_installed

- name: Reboot the server
  reboot:
    msg: "Rebooting the server to apply NVIDIA driver changes"
  become: true
  when: not drivers_installed and reboot_required_file.stat.exists
