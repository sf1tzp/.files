start vm:
    virsh start {{vm}}

stop vm:
    virsh destroy {{vm}}

pause vm:
    virsh suspend {{vm}}

resume vm:
    virsh resume {{vm}}

base-images:
    ansible-playbook vms/base-images.yaml

create-linux +hosts:
    ansible-playbook vms/create-linux.yaml --inventory ~/.files/homelab/inventory --vault-password-file ~/.ansible-password --extra-vars "target_vms={{ hosts }}"

create-windows:
    ansible-playbook vms/create-windows.yaml

update:
    ansible-playbook vms/update.yaml --inventory ~/.files/homelab/inventory

delete +vms:
    ansible-playbook vms/delete.yaml --extra-vars vm_names="{{ vms }}"

decrypt-vm-password:
    ansible-playbook vms/decrypt-vm-password.yaml --vault-password-file ~/.ansible-password

set-up +hosts:
    ansible-playbook vms/set-up.yaml --inventory ~/.files/homelab/inventory --limit "{{ hosts }}"

wireguard +hosts="all":
    ansible-playbook vms/wireguard.yaml --inventory ~/.files/homelab/inventory --limit "{{ hosts }}" --vault-password-file ~/.ansible-password

eject-cloud-init-io vm:
    virsh detach-disk {{ vm }} hda --live --config
    rm /var/lib/libvirt/images/{{ vm }}-cloud-init.iso

_base_images_from_iso:
    #!/bin/bash
    set -ex
    pushd /var/lib/libvirt/images
    qemu-img convert -f raw ubuntu-24.04.2-live-server-amd64.iso 	-O qcow2 ubuntu-base.qcow2
    qemu-img convert -f raw ubuntu-24.04.2-desktop-amd64.iso 	-O qcow2 ubuntu-desktop-base.qcow2
    qemu-img convert -f raw latest-nixos-minimal-x86_64-linux.iso 	-O qcow2 nixos-base.qcow2
    popd


x11-tunnel vm:
  DISPLAY=:0 ssh -X {{ vm }}

